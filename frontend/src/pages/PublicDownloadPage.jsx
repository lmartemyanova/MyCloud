import { useEffect, useState } from "react";
import { useParams } from "react-router-dom";

const PublicDownloadPage = () => {
  const { uuid } = useParams();
  const [file, setFile] = useState(null);
  const [error, setError] = useState("");

  useEffect(() => {
    const fetchFile = async () => {
      try {
        const res = await fetch(`http://localhost:8000/api/storage/public/${uuid}/metadata/`);
        if (!res.ok) throw new Error("–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω");
        const data = await res.json();
        setFile(data);
      } catch (err) {
        setError("–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω");
      }
    };

    fetchFile();
  }, [uuid]);


  const handleDownload = async () => {
    try {
      const res = await fetch(`http://localhost:8000/api/storage/public/${uuid}`);
      if (!res.ok) throw new Error("–û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è");

      const blob = await res.blob();

      const contentDisposition = res.headers.get("Content-Disposition");
      const filenameMatch = contentDisposition?.match(/filename="?(.+)"?/);
      const filename = filenameMatch?.[1] ? decodeURIComponent(filenameMatch[1]) : "downloaded-file";

      const url = window.URL.createObjectURL(blob);
      const link = document.createElement("a");
      link.href = url;
      link.download = filename;
      link.click();
      window.URL.revokeObjectURL(url);
    } catch (err) {
      setError("–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —Å—Å—ã–ª–∫–∏ –∏—Å—Ç—ë–∫");
    }
  };

  if (error) return <div>{error}</div>;

  if (!file) return <div>–ó–∞–≥—Ä—É–∑–∫–∞...</div>;

  return (
    <div style={{ padding: "2rem", textAlign: "center" }}>
      <h2>üìÑ {file.original_name}</h2>
      <p>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {file.comment || "‚Äî"}</p>
      <p>–†–∞–∑–º–µ—Ä: {(file.size / 1024).toFixed(2)} –ö–ë</p>
      <button onClick={handleDownload}>‚¨áÔ∏è –°–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª</button>
    </div>
  );
};

export default PublicDownloadPage;